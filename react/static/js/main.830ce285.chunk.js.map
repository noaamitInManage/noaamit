{"version":3,"sources":["redux/slices/state/index.js","redux/slices/data/index.js","redux/slices/forms/index.js","redux/index.js","api/queue_manager/index.js","api/requests/index.js","api/index.js","constants/popup-types.js","containers/header/DesktopMenu/index.js","containers/header/BurgerMenu/index.js","containers/header/index.js","constants/routes.js","components/meta_tags/index.js","components/common/loader/index.js","components/routing/scroll_top.js","containers/home/index.js","app/validation/validation.js","app/functions/index.js","components/forms/animated_input/index.js","components/forms/animated_textarea/index.js","components/forms/autocomplete/basic/index.js","containers/contact/index.js","containers/content-page/index.js","popups/components/basic/index.js","popups/index.js","containers/page404/index.js","dev/docs/tools/device/index.js","dev/docs/doc-routes/index.js","dev/docs/tools/index.js","dev/docs/components/scrolltop/index.js","dev/docs/components/meta/index.js","dev/docs/components/loader/index.js","dev/docs/components/popups/index.js","components/common/collapse/index.js","dev/docs/components/collapse/index.js","dev/docs/components/index.js","dev/docs/index.js","dev/all-components/index.js","App.js","index.js","app/device_state/index.js","assets/icons/burger.svg","assets/logos/react.svg"],"names":["stateReducers","deviceSlice","createSlice","name","initialState","reducers","setDeviceState","state","action","payload","actions","reducer","loaderSlice","setLoader","popupsSlice","addPopup","push","removePopup","pop","requestingSlice","requestStarted","requestEnded","burgerSlice","setBurger","dataReducers","gdSlice","setGd","userSlice","setUser","metaTagsSlice","setMetaTags","formsReducers","contactSlice","updateContactForm","resetContactForm","Store","configureStore","deviceState","deviceReducer","loaderState","loaderReducer","burgerState","burgerReducer","popupsArray","popupsReducer","requesting","requestingReducer","contactForm","contactFormReducer","gd","gdReducer","userData","userReducer","metaTags","metaTagsReducer","middleware","getDefaultMiddleware","serializableCheck","QueueManager","addRequestToQueue","request","block","item","length","popFromQueue","shift","undefined","this","instance","Api","getHostUrl","props","onSuccess","response","api","base_url","data","host","get_methods","get_url","_updateApiParams","_execute","generalDeclaration","store","dispatch","Actions","useGetUrl","path","part","parts","url","https","getMethodsUrl","baseUrl","settings","onFailure","callback","axios","then","status","catch","error","console","log","params","method","timeout","requestUrl","FormData","Object","entries","constructor","key","append","debug_mode","withCredentials","text","err","content","type","message","methodName","inGetMethodArr","getMethodsList","find","override_path","config","override_method","process","platform","version","freeze","DesktopMenu","className","map","index","route","exact","to","activeClassName","BurgerMenu","useSelector","useDispatch","handleCloseClick","onClick","menuList","Header","isMobile","src","burger","alt","notMobile","logo","Meta","Tags","metaTagsArr","meta_tags","extra_tags","ReactHtmlParser","Component","connect","pure","Loader","withRouter","children","pathname","location","useEffect","window","scrollTo","Home","Text","Gd","translationsArr","home_header","Validate","value","rules","Validations","no_validation","valid","val","msg","not_empty","address","package","email","test","cell","phone","id","full_name","last_digits","checkbox","rule","generateUniqueId","result","characters","charactersLength","i","charAt","Math","floor","random","join","AnimatedInput","useState","animated","setAnimated","placeholder","disable_autocomplete","showError","errorMessage","tabIndex","is_animated","onChange","e","target","animatePlaceholder","autoComplete","htmlFor","AnimatedTextArea","setState","AutoComplete","handleClick","preventDefault","detail","newState","open","handleClickOutside","handleKeyUp","event","highlighted_item","highlighted_option","document","getElementsByClassName","selected_option_id","getAttribute","options","selected_item","option","parseInt","onSelect","handleOptionClick","getList","list","activeOption","selected_id","highlightedOption","onMouseDown","filterOptions","filter","indexOf","query","label","disabled","activeClass","filteredOptions","onBlur","onKeyUp","Contact","handleInputChange","validationObj","form","new_state","errMsg","updateForm","handleAutocompleteSelection","newVal","CityOptions","forEach","validateAutocomplete","handleSubmit","form_valid","field","Form","first_try","cities","ContentPage","Translations","BasicPopup","animateIn","requestAnimationFrame","animation_class","completeAnimation","animateOut","setTimeout","btnRef","React","createRef","current","focus","onTransitionEnd","stopPropagation","ref","Popups","popupContainer","querySelector","disableBodyScroll","clearAllBodyScrollLocks","when","popup","popupComponents","getPopupComponent","Page404","amount","Tool","meta","collapse","Tools","component","Device","doSomeAsyncThing","showAPopup","Collapse","contentRef","forceUpdate","style","height","clientHeight","showContent","Components","Routes","Scroll","Documentation","App","initialRequestsDone","showPopup","showLoader","renderPage","Content","Docs","page","getScreen","1","2","3","4","getComputedStyle","indicator","getPropertyValue","start","debounce","device","isTablet","isDesktop","notDesktop","debounce_delay","addEventListener","createElement","body","appendChild","func","wait","immediate","context","args","arguments","later","apply","callNow","clearTimeout","ReactDOM","render","basename","getElementById","module","exports"],"mappings":"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","file":"static/js/main.830ce285.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nlet stateReducers = {};\n\nexport const deviceSlice = createSlice({\n    name: 'deviceState',\n    initialState: false,\n    reducers: {\n        setDeviceState: (state, action) => action.payload,\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setDeviceState } = deviceSlice.actions;\nstateReducers['deviceReducer'] = deviceSlice.reducer;\n\n/*---------------------------------------------------------------*/\n\nexport const loaderSlice = createSlice({\n    name: 'loaderState',\n    initialState: false,\n    reducers: {\n        setLoader: (state, action) => action.payload\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setLoader } = loaderSlice.actions;\nstateReducers['loaderReducer'] = loaderSlice.reducer;\n\n/*---------------------------------------------------------------*/\n\nexport const popupsSlice = createSlice({\n    name: 'popupsArray',\n    initialState: [],\n    reducers: {\n        addPopup: (state, action) => {\n            state = state.push(action.payload)\n        },\n        removePopup: (state) => {\n            state = state.pop();\n        },\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addPopup, removePopup } = popupsSlice.actions;\nstateReducers['popupsReducer'] = popupsSlice.reducer;\n\n/*---------------------------------------------------------------*/\n\nexport const requestingSlice = createSlice({\n    name: 'requestingState',\n    initialState: false,\n    reducers: {\n        requestStarted: (state, action) => true,\n        requestEnded: (state, action) => false,\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { requestStarted, requestEnded } = requestingSlice.actions;\nstateReducers['requestingReducer'] = requestingSlice.reducer;\n\n/*---------------------------------------------------------------*/\n\nexport const burgerSlice = createSlice({\n    name: 'requestingState',\n    initialState: false,\n    reducers: {\n        setBurger: (state, action) => action.payload,\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setBurger } = burgerSlice.actions;\nstateReducers['burgerReducer'] = burgerSlice.reducer;\n\n/*---------------------------------------------------------------*/\nexport { stateReducers };","import { createSlice } from '@reduxjs/toolkit'\n\nlet dataReducers = {};\n\nexport const gdSlice = createSlice({\n    name: 'gd',\n    initialState: false,\n    reducers: {\n        setGd: (state, action) => action.payload\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setGd } = gdSlice.actions;\ndataReducers['gdReducer'] = gdSlice.reducer;\n\n/*---------------------------------------------------------------*/\n\nexport const userSlice = createSlice({\n    name: 'userData',\n    initialState: false,\n    reducers: {\n        setUser: (state, action) => action.payload\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setUser } = userSlice.actions;\ndataReducers['userReducer']= userSlice.reducer;\n\n/*---------------------------------------------------------------*/\n\nexport const metaTagsSlice = createSlice({\n    name: 'userData',\n    initialState: false,\n    reducers: {\n        setMetaTags: (state, action) => action.payload\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setMetaTags } = metaTagsSlice.actions;\ndataReducers['metaTagsReducer']= metaTagsSlice.reducer;\n\nexport { dataReducers };","import { createSlice } from '@reduxjs/toolkit';\n\nlet formsReducers = {};\n\nexport const contactSlice = createSlice({\n    name: 'signupForm',\n    initialState: {},\n    reducers: {\n        updateContactForm: (state, action) => {\n            return {...state, ...action.payload}\n        },\n        resetContactForm: (state, action) => {\n            return {}\n        }\n    },\n});\nexport const { updateContactForm, resetContactForm } = contactSlice.actions;\nformsReducers['contactFormReducer'] = contactSlice.reducer;\n\n/* exported to root reducer */\nexport { formsReducers };","import { configureStore } from '@reduxjs/toolkit';\n\nimport { stateReducers } from \"./slices/state\";\nimport { dataReducers }  from \"./slices/data\";\nimport { formsReducers } from \"./slices/forms\";\n\nconst Store = configureStore({\n    reducer: {\n        //state\n        deviceState:stateReducers.deviceReducer,\n        loaderState:stateReducers.loaderReducer,\n        burgerState:stateReducers.burgerReducer,\n        popupsArray:stateReducers.popupsReducer,\n        requesting:stateReducers.requestingReducer,\n\n        //forms\n        contactForm:formsReducers.contactFormReducer,\n\n        //data\n        gd: dataReducers.gdReducer,\n        userData: dataReducers.userReducer,\n        metaTags: dataReducers.metaTagsReducer\n    },\n    /* remove warning for non serialized data in store */\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: false,\n        }),\n});\n\nexport default Store;","export default class QueueManager{\n    #queue = null;\n\n    constructor(){\n        this.#queue = [];\n    }\n\n    addRequestToQueue = (request, block) =>{\n        const item = {request: request, block: block};\n\n        this.#queue.push(item);\n        if (this.#queue.length === 1) {\n            if (item.block)\n                this.#queue[0].request();\n        }\n\n    };\n\n    popFromQueue = () =>{\n        let pop = null;\n        if (this.#queue.length) {\n            pop = this.#queue[0];\n            this.#queue.shift();\n\n            if (this.#queue[0] !== undefined && this.#queue[0].block)\n                this.#queue[0].request();\n\n        }\n\n        return pop;\n    };\n}\n","import ApiManager from '../index';\nimport * as Actions from \"redux/actions\";\nimport store from \"../../redux\";\n\nclass Api extends ApiManager{\n\n    constructor(){\n         if(!Api.instance) {\n             super();\n             Api.instance = this;\n         }\n\n         return  Api.instance = this;\n    }\n\n    getHostUrl = (props = {}) =>{\n        const onSuccess = (response) =>{\n            let api = {\n                base_url: response.data.host,\n                get_methods:response.data.get_methods,\n                get_url: response.data.get_url\n            }\n            this._updateApiParams(api);\n        }\n        return this._execute(props, 'getHostUrl', onSuccess);\n    };\n\n    generalDeclaration = (props = {}) =>{\n        const onSuccess = (response) => {\n            store.dispatch(Actions.setGd(response.data));\n        };\n\n        return this._execute(props, 'generalDeclaration', onSuccess);\n    };\n}\n\nconst instance = new Api();\nObject.freeze(instance);\nexport default instance;","\nimport axios from \"axios/index\";\nimport store from '../redux/index';\n\nimport * as Actions from \"../redux/actions/index\";\nimport * as popups from \"../constants/popup-types\";\n\nimport QueueManager from './queue_manager';\n\n\nclass ApiManager{\n\n    /* ------ private variables ------- */\n    #api = false;\n    #queue = false;\n\n    constructor() {\n\n        this.#api = {\n            https: true,\n            baseUrl: process.env.REACT_APP_HOST,\n            parts: {\n                path: process.env.REACT_APP_PATH,\n                platform: process.env.REACT_APP_PLATFORM,\n                version: process.env.REACT_APP_VERSION,\n            },\n            getMethodsUrl: process.env.REACT_APP_GET_HOST,\n            getMethodsList: [],\n        };\n\n        this.#queue = new QueueManager();\n    }\n\n    /* ------ private methods ------- */\n\n    #buildBaseUrl = (useGetUrl = false) => {\n\n        let path = '';\n        for(let part in this.#api.parts) {\n            let item = this.#api.parts[part];\n            if(item !== '') {\n                path = path + item + '/';\n            }\n        }\n    \n        //use package json proxy while developing in localhost\n        if(process.env.NODE_ENV === 'development') {\n            return path;\n        }\n\n        let url = (this.#api.https ? 'https' :'http') + '://'+ (useGetUrl ? this.#api.getMethodsUrl : this.#api.baseUrl);\n        url = url + path;\n        return url;\n    };\n\n    #call = (settings, onSuccess, onFailure, callback) => {\n         return axios(settings).then((response) => {\n            store.dispatch(Actions.requestEnded());\n            this.#queue.popFromQueue();\n             if (typeof callback === 'function') {\n                 callback(response);\n             }\n            if(response.data.status) {\n                onSuccess ? onSuccess(response.data) : this.#onSuccess();\n                return response.data;\n            } else {\n                onFailure ? onFailure(response.data) : this.#onFailure(response.data);\n            }\n        }).catch((error) => {\n            store.dispatch(Actions.requestEnded());\n            console.log('catch error:', error);\n            this.#handleServerError(error);\n        });\n    };\n\n    #generateRequest = (request, params = {}, method = 'post', timeout = false) => {\n        let requestUrl = request;\n        let data       = new FormData();\n        let settings   = {};\n\n        //build form data\n        if(!(Object.entries(params).length === 0 && params.constructor === Object)) {\n            for(let key in params) {\n                data.append(key, params[key]);\n            }\n        } else {\n            data = null;\n        }\n\n        if(this.#api.debug_mode) {\n            console.log('%cmaking request:' + requestUrl, 'color: #0000FF', '');\n            console.log('%c---request payload:', 'color: #0000FF',  params);\n        }\n\n        settings.method = method;\n        settings.url    = requestUrl;\n        settings.timeout = timeout ? timeout : 1000 * 60 * 2;\n        settings.withCredentials = true;\n\n        method === 'post' ? settings.data = data : settings.params = params;\n\n        store.dispatch(Actions.requestStarted());\n\n        return settings;\n    };\n\n    #onSuccess = () => {\n        console.log('successful');\n    };\n\n    #onFailure = (response) =>{\n        const text = response?.err?.content !== undefined ? response.err.content : 'תקלת שרת, אנא נסה שנית מאוחר יותר';\n        store.dispatch(Actions.addPopup({\n            type:popups.API_ERROR,\n            payload:{text: text}\n        }));\n    };\n\n    #handleServerError = (error) =>{\n        store.dispatch(Actions.addPopup({type:popups.API_MESSAGE, text:error.message}));\n    };\n\n    /* ------ protected methods ------- */\n\n    _execute = (props, methodName, onSuccess = false, onFailure = false) =>{\n\n        let request, method;\n        let inGetMethodArr = this.#api.getMethodsList.find((method)=> method === methodName);\n\n        if(inGetMethodArr) {\n            method  = 'get';\n            request = this.#buildBaseUrl(true) + methodName;\n        } else {\n            method  = 'post';\n            request = this.#buildBaseUrl() + methodName;\n        }\n\n        //override if props sent\n        let override_path   = props?.config?.path !== undefined;\n        let override_method = props?.config?.method !== undefined;\n        if(override_method) { method  = props.config.method }\n        if(override_path) { request = props.config.path + methodName }\n\n        const block = props?.config?.block !== undefined;\n        const settings = this.#generateRequest(request, props.payload, method);\n\n        this.#queue.addRequestToQueue(() => this.#call(settings, onSuccess, onFailure, props.callback), block);\n        console.log(request);\n        if (!block)\n            return this.#call(settings, onSuccess, onFailure, props.callback);\n    };\n\n    _updateApiParams = (api) =>{\n        if (api.base_url) this.#api.baseUrl = api.base_url;\n        if (api.get_methods) this.#api.getMethodsList = api.get_methods;\n        if (api.get_url) this.#api.getMethodsUrl = api.get_url;\n    }\n}\n\nexport default ApiManager;","export const GENERAL_MESSAGE = 'GENERAL_MESSAGE';\nexport const API_MESSAGE     = 'API_MESSAGE';\nexport const API_ERROR       = 'API_ERROR';","import React       from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './index.scss';\n\nexport default function DesktopMenu(props) {\n\n    const getNavLinks = () => {\n        let links = props.data.map((item, index) => {\n            if(item.route !== '/') {\n\n            }\n            let exact = {exact: item.route === '/'};\n            return (\n                <NavLink to={ item.route }\n                         activeClassName='active'\n                         className=\"desktop-menu-item\"\n                         key={ index }\n                         {...exact}>\n                    <h4 className=\"menu-item\">\n                        { item.text }\n                    </h4>\n                </NavLink>\n            )\n        })\n        return links;\n    }\n\n    return (\n        <nav className=\"desktop-menu\">\n            { getNavLinks() }\n        </nav>\n    )\n}","import React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\n//import actions\nimport * as Actions from 'redux/actions';\nimport './index.scss';\n\nexport default function BurgerMenu(props) {\n\n    const state    = useSelector(store => store.burgerState);\n    const dispatch = useDispatch();\n\n    const handleCloseClick = () => {\n        dispatch(Actions.setBurger(false));\n    }\n\n    return (\n        <div className={\"burger-menu-wrapper \" + (state ? 'active' : '')}\n             onClick = { handleCloseClick }>\n            <div className=\"burger-menu\">\n                <ul className=\"burger-menu-list\">\n                    {props.data.map((item, index) =>\n                        <li className=\"burger-menu-item\" key={\"burger-item-\" + index}>\n                            <NavLink exact\n                                     to={ item.route }\n                                     activeClassName='active'\n                                     className=\"btn burger-menu-link\"\n                                     onClick={handleCloseClick}>\n                                <span>{ item.text }</span>\n                            </NavLink>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}","import React           from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\n//Components\nimport DesktopMenu from './DesktopMenu';\nimport BurgerMenu  from './BurgerMenu';\n\n//Assets\nimport './index.scss';\nimport burger from 'assets/icons/burger.svg';\nimport logo   from 'assets/logos/react.svg';\n\n//routing constants\nimport * as Routes from 'constants/routes';\n\n//Actions\nimport * as Actions from 'redux/actions';\n\n/* example menu data from api */\nconst menuList = [\n    {\n        text: 'ראשי',\n        route: Routes.root\n    },\n    {\n        text: 'צור קשר',\n        route: Routes.contact\n    },\n    {\n        text: 'Docs',\n        route: Routes.docs\n    },\n];\n\nfunction Header() {\n\n    const deviceState = useSelector(store => store.deviceState);\n    const dispatch = useDispatch();\n    const handleBurgerClick = () => {\n        dispatch(Actions.setBurger(true));\n    }\n\n    return (\n        <header className='header-wrapper'>\n            <div className=\"header\">\n                { deviceState.isMobile &&\n                    <div className=\"burger-icon\" onClick={ handleBurgerClick }>\n                        <img src={ burger } alt=\"\" />\n                    </div>\n                }\n                { deviceState.notMobile && <DesktopMenu data = { menuList } /> }\n                { deviceState.isMobile &&  <BurgerMenu  data = { menuList } /> }\n                <img src={ logo } className=\"logo\" alt=\"\" />\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","export const root       = '/';\nexport const about      = '/אודות';\nexport const contact    = '/צור_קשר';\n\n/* documentation */\nexport const docs       = '/docs';","import React           from 'react';\nimport { Component }   from 'react';\nimport { connect }     from 'react-redux';\nimport MetaTags        from 'react-meta-tags';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass Meta extends Component {\n    \n    render() {\n        const data = this.props.Tags;\n\n        let metaTagsArr = [];\n        if(data) {\n            for(let key in data.meta_tags) {\n                metaTagsArr.push(\n                  <meta name={ key } content= { data.meta_tags[key] } key={ key } />\n                );\n            };\n        } else {\n            return <></>;\n        }\n\n        return (\n            <MetaTags>\n                { data &&\n                    <>\n                        { metaTagsArr }\n                        <title>{ data.meta_tags['title'] }</title>\n                        {\n                            data.extra_tags.map((item) => {\n                                return (\n                                    ReactHtmlParser(item)\n                                )\n                            })\n                        }\n                    </>\n                }\n            </MetaTags>\n        )\n    }\n}\n\nconst mapStateToProps = store => {\n    return {\n        Tags: store.metaTags\n    }\n}\n\nexport default connect(mapStateToProps, null, null, { pure: false })(Meta);","import React from 'react';\nimport './index.scss';\n\nconst Loader = (props) => {\n\n    return (\n        <div className= \"loader_wrapper\">\n            <div className=\"loader\"></div>\n        </div>\n    );\n}\nexport default Loader;","import { withRouter } from 'react-router-dom';\nimport { useEffect }  from 'react';\n\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return children || null;\n};\n\nexport default withRouter(ScrollToTop);","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\n\nimport './index.scss';\n\nclass Home extends Component {\n    \n    render() {\n        const Text = this.props.Gd.translationsArr ? this.props.Gd.translationsArr : 'text' ;\n        return (\n            <div className=\"home\">\n                <h1>{ Text.home_header }</h1>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n        Gd:store.gd\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {}\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Home);\n","export default function Validate(value, rules) {\n\n    const Validations = {\n        no_validation: {\n            valid: val => true,\n            msg: '',\n        },\n        not_empty: {\n            valid: val => val !== '' && val !== undefined,\n            msg: 'שדה חובה',\n        },\n        address: {\n            valid: val => val !== '' && val !== undefined,\n            msg: 'יש לבחור כתובת למשלוח',\n        },\n        package: {\n            valid: val => val !== '' && val !== undefined,\n            msg: 'יש לבחור מסלול',\n        },\n        email: {\n            valid: val => /^([\\w!#$%&'*+-/=?^`{|}~]+\\.)*[\\w!#$%&'*+-/=?^`{|}~]+@((((([a-zA-Z0-9]{1}[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]{1})|[a-zA-Z])\\.)+[a-zA-Z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(:\\d{1,5})?)$/.test(val),\n            msg: 'כתובת דוא\"ל שגויה',\n        },\n        cell: {\n            valid: val => /^(?:(0(?:50|51|52|53|54|55|57|58|72|73|74|76|77|78)[-]?[0-9]{7}))$/.test(val),\n            msg: 'מספר סלולרי שגוי',\n        },\n        phone: {\n            valid: val => /^(?:(0(?:2|3|4|8|9|7|50|51|52|53|54|55|56|57|58|59|72|73|74|76|77|78)[-]?[0-9]{7}))$/.test(val),\n            msg: 'מספר טלפון שגוי',\n        },\n        id: {\n            valid: val => /^[0-9]*$/.test(val) && val.length === 9,\n            msg: 'תעודת זהות לא תקינה',\n        },\n        full_name: {\n            valid: val => /^([\\w\\u0590-\\u05FF]{2,})+\\s+([\\w\\u0590-\\u05FF\\s]{2,})+$/.test(val),\n            msg: 'יש למלא שם פרטי ושם משפחה',\n        },\n        last_digits:{\n            valid: val => /^[0-9]*$/.test(val) && val.length === 4,\n            msg: 'אנא הזינו 4 ספרות אחרונות בכרטיס האשראי',\n        },\n        checkbox:{\n            valid: val => val,\n            msg: 'שדה חובה',\n        }\n    };\n\n    let valid = true;\n    let msg   = '';\n\n    for(let rule of rules) {\n        if(typeof rule === 'function') {\n            valid = rule();\n            msg = 'שדה חובה';\n        } else {\n            if(!Validations[rule].valid(value)) {\n                valid = false;\n                msg = Validations[rule].msg;\n                break;\n            }\n        }\n    };\n\n    return {valid:valid,msg:msg};\n}","import AppConfig from 'app/config/AppConfig';\n\n//returns full path of asset\nexport function getPath(path) {\n    let Config = new AppConfig();\n    return (Config.debug_mode ? Config.media_path + path : path);\n}\n\n//returns full path of asset\nexport function getMediaPath(path) {\n    let Config = new AppConfig();\n    return Config.media_path + path;\n}\n\n//check for empty objects\nexport function notEmptyObject(obj) {\n    let empty = true;\n    if(obj) {\n        if(Object.keys(obj).length !== 0 && obj.constructor === Object) {\n            empty = false;\n        }\n    }\n    return empty;\n}\n\n//Convert Object to sorted array by order_num\nexport function convertToSortedArray(obj) {\n    let sortedArr = Object.keys(obj).map(key => obj[key]);\n    sortedArr = sortedArr.sort((a,b) => { return a.order_num - b.order_num });\n    return sortedArr;\n}\n\n//query browser for user location\nexport function getUserGeoLocation(onSuccess, onFailure) {\n    if (\"geolocation\" in navigator) {\n        // check if geolocation is supported/enabled on current browser\n        navigator.geolocation.getCurrentPosition (\n            function success(position) {\n                // for when getting location is a success\n                onSuccess(position);\n            },\n            function error(error_message) {\n                // for when getting location results in an error\n                // console.error('An error has occured while retrieving location', error_message);\n                onFailure(error_message);\n            });\n    } else {\n        // geolocation is not supported\n        // get your location some other way\n        console.log('geolocation is not enabled on this browser');\n    }\n}\n\nexport function setMarkerClustersScript(clusterScriptOnLoad) {\n    let cluster_script_attached = document.getElementById('google-map-cluster');\n    if(cluster_script_attached === null) {\n        let s = document.createElement('script');\n        s.async = true;\n        s.id = 'google-map-cluster';\n        s.type = 'text/javascript';\n        s.src = 'https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js';\n        let x = document.getElementsByTagName('script')[1];\n        x.parentNode.insertBefore(s, x);\n\n        /* listen for google map script load event */\n        s.addEventListener('load', e => clusterScriptOnLoad());\n    }\n    else{\n        clusterScriptOnLoad();\n    }\n}\n\n//calculate distance in Km between 2 gps points\nfunction toRad(num) {\n    return num * Math.PI / 180;\n}\nexport function calcDistance(p1, p2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = toRad((p1.lat - p2.lat)); // Javascript functions in radians\n    var dLon = toRad((p1.lng - p2.lng));\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(p2.lat)) * Math.cos(toRad(p1.lat)) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return parseInt(d);\n}\n\n\nexport function generateUniqueId(length) {\n    var result           = [];\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result.push(characters.charAt(Math.floor(Math.random() *\n            charactersLength)));\n    }\n    return result.join('');\n}\n","import React                from 'react';\nimport { useState }         from 'react';\nimport { generateUniqueId } from 'app/functions';\n\nimport './index.scss';\n\nfunction AnimatedInput(props) {\n\n    const [animated, setAnimated] = useState(false);\n\n    const animatePlaceholder = (e) => {\n        let val = e.target.value;\n        setAnimated((val !== ''));\n        props.onChange(e);\n    }\n    const {\n        type,\n        name,\n        placeholder = '',\n        value = '',\n        id = generateUniqueId(16),\n        disable_autocomplete = false,\n        showError,\n        className,\n        errorMessage = 'empty or undefined errorMessage prop',\n        tabIndex = 10 } = props;\n\n    let is_animated = animated || value !== '';\n\n    return (\n        <div className = {'animated-input-wrapper animated ' + className + (showError ? ' error' : '') + (is_animated ? ' animate' : '')}>\n            <input type         = { type }\n                   name         = { name }\n                   value        = { value }\n                   id           = { id }\n                   className    = { 'input' }\n                   onChange     = { (e) => animatePlaceholder(e) }\n                   tabIndex     = { tabIndex }\n                   autoComplete = { disable_autocomplete ? 'off' : ''}\n            />\n            <label htmlFor={ id } className=\"placeholder\">{ placeholder }</label>\n            {showError ? <div className = \"error-text\">{ errorMessage }</div> : ''}\n        </div>\n    )\n}\nexport default AnimatedInput;","import React, { Component } from 'react';\nimport { generateUniqueId } from 'app/functions';\n\nimport './index.scss';\n\nclass AnimatedTextArea extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            animated: false,\n        }\n    }\n\n    animatePlaceholder(e) {\n        let val = e.target.value;\n        this.setState({animated:(val !== '')});\n        this.props.onChange(e);\n    }\n\n    render() {\n        const {\n            type,\n            name,\n            placeholder = '',\n            value = '',\n            id = generateUniqueId(16),\n            showError,\n            className,\n            errorMessage = 'empty or undefined errorMessage prop',\n            tabIndex = 10 } = this.props;\n\n        return (\n            <div className = {className + ' animated_textarea_wrapper animated' + (showError ? ' error' : '') + (this.state.animated ? ' animate' : '')}>\n                <textarea type      = { type }\n                          className = 'textarea'\n                          name      = { name }\n                          id        = { id }\n                          value     = { value }\n                          onChange  = { (e) => this.animatePlaceholder(e) }\n                          tabIndex  = { tabIndex }\n                />\n                <label htmlFor = { id } className=\"placeholder\">{ placeholder }</label>\n                {showError ? <div className = \"error-text\">{ errorMessage }</div> : ''}\n            </div>\n        )\n    }\n}\nexport default AnimatedTextArea;\n","import React         from 'react';\nimport { Component } from 'react';\nimport { generateUniqueId } from 'app/functions';\n\nimport './index.scss';\n\nclass AutoComplete extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open : false,\n            highlighted_item : -1,\n        }\n    }\n\n    handleClick = (e) => {\n\n        //prevent form submission\n        e.preventDefault();\n\n        //fix for enter keyup event triggering click events - 0 = Enter key, 1 = click event\n        if (!(e.detail === 0)) {\n            let newState = !this.state.open;\n            this.setState({open: newState});\n        }\n    }\n\n    handleClickOutside = () =>{\n        this.setState({open: false});\n    }\n\n    handleKeyUp = (event) => {\n        let highlighted_item   = this.state.highlighted_item;\n        let highlighted_option = document.getElementsByClassName(\"highlight\");\n        let selected_option_id = -1;\n\n        if(highlighted_option.length > 0) {\n            selected_option_id = highlighted_option[0].getAttribute('id');\n        }\n\n        switch(event.key) {\n            case('ArrowDown'): (highlighted_item + 1) > this.props.options.length -1 ?\n                highlighted_item = 0\n                :  highlighted_item++;\n                this.setState({highlighted_item: highlighted_item});\n                break;\n\n            case('ArrowUp'):   (highlighted_item - 1) < 0 ?\n                highlighted_item = this.props.options.length -1\n                :  highlighted_item--;\n                this.setState({highlighted_item: highlighted_item});\n                break;\n\n            case('Enter'):     if(this.state.open === false) {\n                this.setState({open: true})\n            } else {\n                let selected_item = this.props.options.find(option => option.id === parseInt(selected_option_id));\n                this.props.onSelect(selected_item.id, selected_item.text);\n                this.setState({open: false})\n            }\n                break;\n\n            case('Escape'):    this.setState({highlighted_item: 0, open: false});\n                break;\n            default:           break;\n\n        }\n    }\n\n    handleOptionClick = (e, id)  => {\n        e.preventDefault();\n        this.setState({open: false});\n        this.props.onSelect(this.props.name, id);\n    }\n    getList = (options) => {\n        let list    = [];\n\n        for(let item in options) {\n            let activeOption      = options[item].id === this.props.selected_id ? 'active' : '';\n            let highlightedOption = options[item].id === this.state.highlighted_item ? ' highlight' : '';\n\n            list.push(<li className   = { \"auto_option \" + activeOption + highlightedOption }\n                          key         = { options[item].id }\n                          id          = { options[item].id }\n                          onMouseDown = { (e) => this.handleOptionClick(e, options[item].id) }>\n                          { options[item].text }\n            </li>);\n        }\n        return list;\n    }\n    filterOptions = (options) => {\n        let filteredOptions = options.filter(option => option.text.indexOf(this.props.query) !== -1);\n\n        return filteredOptions;\n    }\n\n    render() {\n        const {\n            options,\n            selected_id = -1,\n            name        = 'missing-name-prop',\n            label       = '',\n            placeholder = '',\n            query       = '',\n            id          = generateUniqueId(16),\n            disabled    = false,\n            className,\n            tabIndex,\n            onChange,\n        } = this.props;\n\n        let activeClass = (this.state.open && options.length > 0) ? 'active' : '';\n\n        //filter and sort autocomplete options by query\n        let filteredOptions = query === '' ? options :  this.filterOptions(options);\n\n        return (\n            <>\n                { label !== '' &&\n                    <label htmlFor = { id }> { label } </label>\n                }\n                <div className = {'auto_wrapper ' + className + ' ' + activeClass + (disabled ? ' disabled' : '')  }\n                     tabIndex  = { tabIndex }\n                     onBlur    = { this.handleClickOutside }\n                     onKeyUp   = { this.handleKeyUp }>\n\n                    <input className    = \"auto-input\"\n                           name         = { name }\n                           type         = \"text\"\n                           autoComplete = \"off\"\n                           placeholder  = { placeholder }\n                           onClick      = { (e) => this.handleClick(e) }\n                           onChange     = { (e) => onChange(e) }\n                           value        = { query }\n                    />\n\n                    <ul className = 'auto-menu'>\n                        { this.getList(filteredOptions) }\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\nexport default AutoComplete;","import React       from 'react';\nimport {Component} from 'react';\nimport {connect}   from \"react-redux\";\nimport Validate    from 'app/validation/validation';\n\n//components\nimport AnimatedInput    from \"components/forms/animated_input\";\nimport AnimatedTextArea from 'components/forms/animated_textarea';\nimport AutoComplete     from 'components/forms/autocomplete/basic';\n\n//actions\nimport * as Actions from 'redux/actions';\n\n//assets\nimport './index.scss';\n\nclass Contact extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            first_try: true,\n            form: {\n                full_name: {\n                    valid: false,\n                    rules: ['full_name', 'not_empty'],\n                    errMsg: ''\n                },\n                phone: {\n                    valid: false,\n                    rules: ['phone', 'not_empty'],\n                    errMsg: ''\n                },\n                email: {\n                    valid: false,\n                    rules: ['email', 'not_empty'],\n                    errMsg: ''\n                },\n                message: {\n                    valid: false,\n                    rules: ['not_empty'],\n                    errMsg: ''\n                },\n                cities: {\n                    id: '',\n                    valid: false,\n                    rules: [this.validateAutocomplete],\n                    errMsg: ''\n                }\n            },\n        };\n    }\n\n    handleInputChange = (e) => {\n        let name          = e.target.name;\n        let val           = e.target.value;\n        let validationObj = Validate(val, this.state.form[name].rules);\n\n        let new_state = {...this.state};\n        new_state.form[name].valid  = validationObj.valid;\n        new_state.form[name].errMsg = validationObj.msg;\n\n        this.setState(new_state);\n        this.props.updateForm({[name]:val});\n    }\n\n    handleAutocompleteSelection = (name, id) => {\n        let newVal = '';\n        CityOptions.forEach((item, index) => {\n            console.log(item);\n            console.log(id);\n            if(item.id === id) {\n                newVal = item.text;\n            }\n        });\n        this.props.updateForm({[name]:newVal});\n    }\n\n    validateAutocomplete = (val) => {\n        console.log(val);\n        return false;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        let form_valid = true;\n        let new_state = {...this.state.form};\n        let validationObj;\n\n        for(let field in this.state.form) {\n            validationObj = Validate(this.props.Form[field], this.state.form[field].rules);\n\n            new_state[field].valid  = validationObj.valid;\n            new_state[field].errMsg = validationObj.msg;\n\n            if(!validationObj.valid) {\n                form_valid = false;\n            }\n        }\n\n        this.setState({form:new_state, first_try:false});\n\n        if(form_valid) {\n            console.log('submit');\n        }\n    }\n\n    showError = (field) => {\n        return (!this.state.first_try && !this.state.form[field].valid);\n    }\n\n\n    render(){\n\n        const Form = this.props.Form;\n\n        return(\n            <section className='contact-page-wrapper'>\n\n                <div className='form-wrapper'>\n                    <form name=\"contact-form\">\n                        <AnimatedInput className='field'\n                                       value={Form.full_name}\n                                       name={'full_name'}\n                                       placeholder={'שם'}\n                                       disable_autocomplete = { true }\n                                       onChange={this.handleInputChange}\n                                       showError={this.showError('full_name')}\n                                       errorMessage={this.state.form.full_name.errMsg}\n                        />\n                        <AnimatedInput className= 'field'\n                                       value={Form.phone}\n                                       name={'phone'}\n                                       placeholder={'טלפון נייד'}\n                                       disable_autocomplete = { false }\n                                       onChange={this.handleInputChange}\n                                       showError={this.showError('phone')}\n                                       errorMessage={this.state.form.phone.errMsg}\n                        />\n                        <AnimatedTextArea\n                            className   = 'field'\n                            name        = 'message'\n                            value       = { Form.message }\n                            placeholder = {'סיבת הפנייה'}\n                            onChange    = { this.handleInputChange }\n                            showError   = { this.showError('message') }\n                            errorMessage={this.state.form.message.errMsg}\n                        />\n                        <AutoComplete\n                            className   = 'field'\n                            name        = 'cities'\n                            query       = { Form.cities }\n                            placeholder = {'בחר עיר'}\n                            onChange    = { this.handleInputChange }\n                            onSelect    = { this.handleAutocompleteSelection }\n                            options     = { CityOptions }\n                        />\n                        <button type=\"submit\" onClick={ this.handleSubmit } className=\"submit-btn teal-button\">שלח</button>\n                    </form>\n                </div>\n            </section>\n        )\n    }\n}\n\n\n\n//connect to redux store\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n        Form: store.contactForm,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateForm:(payload)=> dispatch(Actions.updateContactForm(payload)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Contact);\n\nconst CityOptions = [\n    {text: 'תל אביב', id: 1},\n    {text: 'הרצליה', id: 2},\n    {text: 'יבנה', id: 3},\n    {text: 'כפר סבא', id: 4},\n];","import React, { Component } from 'react';\nimport {connect}            from 'react-redux';\nimport './index.scss';\n\nclass ContentPage extends Component {\n\n    render() {\n\n        var Text = this.props.Translations;\n\n        return (\n            <div className=\"content-page\">\n                <h1 className=\"title\">content page</h1>\n            </div>\n        )\n    }\n}\n\n//connect this component to the redux store\nconst mapStateToProps = store => {\n    return {\n        Translations: store.config.Translations,\n        deviceState: store.deviceState,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentPage);","import React           from 'react';\nimport { Component }   from 'react';\nimport { connect }     from 'react-redux';\nimport * as Actions    from 'redux/actions';\nimport './index.scss';\n\nclass BasicPopup extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            animation_class: '',\n        }\n        this.btnRef = React.createRef();\n    }\n\n    /* add class for animation after it is inserted into the DOM */\n    componentDidMount() {\n        this.animateIn();\n        this.btnRef.current.focus();\n    }\n\n    animateIn = () => {\n        requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n                this.setState({animation_class: 'active'});\n            })\n        })\n    }\n\n    completeAnimation = () => {\n        this.setState({animation_class: 'done'});\n    }\n\n    /* first remove the active class for exit animation then call the callback */\n    animateOut = (callback) => {\n        this.setState({animation_class: ''});\n        setTimeout(() => {\n            if(callback) {\n                callback();\n            }\n            this.props.removePopup();\n        }, 200);\n    }\n\n    render() {\n        let text = (this.props.payload && this.props.payload.text) ? this.props.payload.text : 'Undefined General Message Text';\n        return (\n            <div className = { \"backdrop general-msg \" + this.state.animation_class }\n                 onClick = { () => this.animateOut() }\n                 onTransitionEnd = { this.completeAnimation }>\n                <div className = {\"popup_wrapper \" + this.state.animation_class} onClick = { (e) => e.stopPropagation() }>\n                    <button className = \"x_close_icon\" onClick = { () => this.animateOut() }></button>\n                    <div className = \"popup_content\">\n                        { text }\n                    </div>\n                    <button className=\"button accept-btn teal-button\"\n                            onClick = { () => this.animateOut() }\n                            ref={ this.btnRef }>אישור</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {\n        addPopup: (payload) => dispatch(Actions.addPopup(payload)),\n        removePopup: () => dispatch(Actions.removePopup()),\n    }\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(BasicPopup);","import React           from 'react';\nimport { Component }   from 'react';\nimport { useEffect }   from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { Prompt }      from 'react-router-dom';\nimport * as Actions    from 'redux/actions';\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\n\n\nimport { generateUniqueId } from 'app/functions';\n\n//popup types\nimport * as popupTypes from 'constants/popup-types';\n\n//popup components\nimport BasicPopup   from './components/basic';\n\nimport './index.scss';\n\nexport default function Popups() {\n    const popupsArray = useSelector(store => store.popupsArray);\n    const dispatch    = useDispatch();\n\n    //stop body from scrolling while popup is open\n    useEffect(() => {\n        let popupContainer = document.querySelector('#popupContainer');\n        disableBodyScroll(popupContainer);\n\n        return () => {\n            clearAllBodyScrollLocks();\n        }\n    }, [])\n\n    //map popup types to popup components\n    const getPopupComponent = (key, type, payload) => {\n        let popupComponents = {\n            /* general popups */\n            [popupTypes.GENERAL_MESSAGE]: <BasicPopup key={key} payload={ payload } />,\n            [popupTypes.API_MESSAGE]: <BasicPopup key={key} payload={ payload } />,\n            [popupTypes.API_ERROR]: <BasicPopup key={key} payload={ payload } />,\n        }\n\n        let popupToReturn = type in popupComponents ? popupComponents[type] : <BasicPopup key={key} payload={{text:'unknown popup type'}} />;\n        return popupToReturn;\n    }\n\n    const renderPopups = () => {\n        let popupsToRender = popupsArray.map((popup)=>{\n            let key = generateUniqueId();\n            return getPopupComponent(key, popup.type, popup.payload);\n        });\n        return popupsToRender;\n    }\n\n    //close the popup when back button is pressed instead of going to previous page\n    const closePopupOnBackButton = () => {\n        dispatch(Actions.removePopup());\n        return false;\n    }\n\n    return (\n        <div className = \"popup\" id=\"popupContainer\">\n            <Prompt\n                when={ true }\n                message = { closePopupOnBackButton }\n            />\n            { renderPopups() }\n        </div>\n    )\n}","import React from 'react';\n\nimport './page404.css';\n\nconst Page404  = ({className, label, amount, onClick }) =>\n    <div className=\"404_wrapper container\">\n        <h1 className=\"title\">עמוד 404</h1>\n    </div>;\n\nexport default Page404;\n","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\n\nimport './index.scss';\n\nclass Tool extends Component {\n\n    render() {\n        \n        return (\n            <div className=\"tool-wrapper\">\n                <div className=\"component\">\n                    <div className=\"component-title\">\n                        deviceState\n                    </div>\n                    <div className=\"component-usage\">\n                        Render components or implement different behaviour per device type.\n                    </div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\">redux: store.deviceState</div>\n                </div>\n                <div className=\"code-sample\">\n                    <pre>\n{`{\n    device: \"mobile\"\n    isDesktop: false\n    isMobile: true\n    isTablet: false\n    notDesktop: true\n    notMobile: false\n}\n`}\n                    </pre>\n                </div>\n                <div className=\"note\">\n                    <div className=\"note-label\">note:</div>\n                    <span>Use only if a responsive solution is impossible or too time consuming.</span>\n                </div>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {}\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Tool);\n","export const tools      = '/docs/tools';\nexport const device     = '/docs/tools/device';\n\nexport const components = '/docs/components';\nexport const scroll     = '/docs/components/scroll';\nexport const meta       = '/docs/components/meta';\nexport const loader     = '/docs/components/loader';\nexport const popups     = '/docs/components/popups';\nexport const collapse   = '/docs/components/collapse';\n\n\nexport const containers = '/docs/containers';","import React         from 'react';\nimport { Component } from 'react';\nimport { connect }   from 'react-redux';\nimport { Switch }    from 'react-router-dom';\nimport { Route }     from 'react-router-dom';\nimport { NavLink }   from 'react-router-dom';\nimport { Redirect }  from 'react-router-dom';\n\n//Import documentation\nimport Device from './device';\n\n//css\nimport './index.scss';\n\n//routing constants\nimport * as Routes from 'dev/docs/doc-routes';\n\n\nclass Tools extends Component {\n    render() {\n        \n        return (\n            <div className=\"tools-wrapper\">\n                <div className=\"menu-wrapper\">\n                    <NavLink to = { Routes.device } exact activeClassName='active' className=\"docs-item\">deviceState</NavLink>\n                </div>\n                <Switch>\n                    <Route exact path= { Routes.tools }>\n                        <Redirect to={ Routes.device } />\n                    </Route>\n                    <Route exact path={ Routes.device } component={ Device }/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\n//get required state from redux store and map them to the components props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n    }\n}\nexport default connect(mapStateToProps, null, null, { pure: false })(Tools);\n","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\n\nimport './index.scss';\n\nclass Tool extends Component {\n\n    render() {\n        return (\n            <div className=\"tool-wrapper\">\n                <div className=\"component\">\n                    <div className=\"component-title\">\n                        ScrollToTop\n                    </div>\n                    <div className=\"component-usage\">\n                        Scrolls window to top on route changes.\n                    </div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\">import ScrollToTop from 'components/routing/scroll_top';</div>\n                </div>\n                <div className=\"code-sample\">\n                    <code>\n                        {`<ScrollToTop />`}\n                    </code>\n                </div>\n                <div className=\"note\">\n                    <div className=\"note-label\">note:</div>\n                    <span>Disregards previous scrollTop position for history pop events(back button).</span>\n                </div>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {}\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Tool);\n","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\n\nimport './index.scss';\n\nclass Tool extends Component {\n\n    render() {\n        return (\n            <div className=\"tool-wrapper\">\n                <div className=\"component\">\n                    <div className=\"component-title\">MetaTags</div>\n                    <div className=\"component-usage\">\n                        Renders dynamic meta tags from the server. Implemented in App.js.\n                    </div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\">import MetaTags from 'components/meta_tags';</div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\">Receives it's data from redux: store.data.MetaTags</div>\n                </div>\n                <div className=\"code-sample\">\n                    <pre>\n{`{\n    meta_tags: {\n        description: \"תחנות דלק TEN, שירות מצוין, דלקים איכותיים ומחירים תחרותיים.\",\n        keywords: \"דלק, ten, תחנת דלק\",\n        title: \"tenwebsite.inmanage.com - תחנות דלק TEN | מבצעי הדלק הטובים בארץ\"\n    },\n    extra_tags: [\n        <meta http-equiv='content-type' content='text/html; charset=utf-8' />\n        <meta http-equiv='imagetoolbar' content='yes' />\n        <meta name='robots' content='index, follow' />\n    ]\n}`}\n                    </pre>\n                </div>\n                <div className=\"code-sample\">\n                    <code>\n                        {`<MetaTags />`}\n                    </code>\n                </div>\n                <div className=\"note\">\n                    <div className=\"note-label\">note:</div>\n                    <span>Extra tag items are rendered using ReactHtmlParser</span>\n                </div>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {}\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Tool);\n","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\nimport * as Actions from 'redux/actions';\nimport './index.scss';\n\nclass Tool extends Component {\n\n    doSomeAsyncThing = () => {\n        this.props.setLoader(true);\n        setTimeout(()=>{\n            this.props.setLoader(false);\n        },3000);\n    }\n\n    render() {\n        return (\n            <div className=\"tool-wrapper\">\n                <div className=\"component\">\n                    <div className=\"component-title\">Loader</div>\n                    <div className=\"component-usage\">\n                        Simple full screen loader controlled by redux action. Implemented in App.js.\n                    </div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\">import Loader from 'components/common/loader';</div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\"> <b> Actions: </b></div>\n                    <div className=\"label\">setLoaderState(<i>boolean</i>)</div>\n                </div>\n                <div className=\"code-sample\">\n                    <code>\n                        {`<Loader />`}\n                    </code>\n                </div>\n                <div className=\"note\">\n                    <div className=\"note-label\">note:</div>\n                    <span>It's only a basic loader, tailor it to your specific project</span>\n                </div>\n                <button className=\"button\" onClick={ this.doSomeAsyncThing }>test loader</button>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLoader: (payload) => dispatch(Actions.setLoader(payload))\n    }\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Tool);\n","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\n\nimport * as Popups  from 'constants/popup-types';\nimport * as Actions from 'redux/actions';\nimport './index.scss';\n\nclass Tool extends Component {\n\n    showAPopup = () => {\n        let payload = {text:'test message'};\n        let payload2 = {text:'test message 2'};\n        this.props.addPopup({type: Popups.GENERAL_MESSAGE, payload:payload});\n    }\n\n    render() {\n        return (\n            <div className=\"tool-wrapper\">\n                <div className=\"component\">\n                    <div className=\"component-title\">Popups</div>\n                    <div className=\"component-usage\">\n                        Container responsible for displaying popups. Implemented in App.js.\n                    </div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\"><b>Locations:</b></div>\n                    <div className=\"label\">/popups - parent component. Matches popup types to specific popup components.</div>\n                    <div className=\"label\">/constants/popup-types.js - Popup type constants used to reference specific popup components</div>\n                    <div className=\"label\">/popups/components - Folder for popup components</div>\n                </div>\n                <div className=\"import-strip\">\n                    <div className=\"label\"> <b> Actions: </b></div>\n                    <div className=\"label\">addPopup(<i>object</i>) - adds a popup to the redux popups array</div>\n                    <div className=\"label\">removePopup() - removes the last popup that was added</div>\n                    <pre>\n{`{\n    type:`}<i> string </i>{`\n    payload:`} <i>object</i>(optional){`\n}`}\n                    </pre>\n                </div>\n                <div className=\"code-sample\">\n                    <code>\n                        <b>{`In App.js:`}</b>\n                        <br />\n                        {`let showPopup = this.props.popupsArray.length > 0;`}\n                        <br />\n                        {`{ showPopup && <Popups />}`}\n                    </code>\n                </div>\n                <div className=\"note\">\n                    <div className=\"note-label\">note:</div>\n                    <span>Copy paste the basic popup in order to create new ones.</span>\n                </div>\n                <button className=\"button\" onClick={ this.showAPopup }>test popup</button>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {\n        addPopup: (payload) => dispatch(Actions.addPopup(payload))\n    }\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Tool);\n","import React, { Component } from 'react';\nimport './index.scss';\n\nclass Collapse extends Component {\n\n    constructor(props) {\n        super(props);\n        this.contentRef = React.createRef();\n    }\n    componentDidMount() {\n        this.forceUpdate();\n    }\n\n    render() {\n        let { open = false } = this.props;\n        let style = {};\n        if(open && this.contentRef.current !== null) {\n            let height   = this.contentRef.current.clientHeight;\n            style.height = height;\n        }\n\n        return (\n            <div className=\"collapse-wrapper\" style = { style }>\n                <div className=\"collapse-content\" ref = { this.contentRef }>\n                    { this.props.children }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Collapse;","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\nimport * as Actions from 'redux/actions';\nimport './index.scss';\n\nimport Collapse from 'components/common/collapse';\n\nclass Tool extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open:false\n        }\n    }\n    showContent = () => {\n        let state = !this.state.open;\n        this.setState({open:state});\n    }\n\n    render() {\n        return (\n            <div className=\"tool-wrapper with-preview\">\n                <div className=\"left\">\n                    <div className=\"component\">\n                        <div className=\"component-title\">Collapse</div>\n                        <div className=\"component-usage\">\n                            Wrap collapsible components to gain smooth animation according to calculated content height.\n                        </div>\n                    </div>\n                    <div className=\"import-strip\">\n                        <div className=\"label\">import Collapse from 'components/common/collapse';</div>\n                    </div>\n                    <div className=\"import-strip\">\n                        <div className=\"label\"> <b> Props: </b></div>\n                        <div className=\"label\">open(<i>boolean</i>)</div>\n                    </div>\n                    <div className=\"code-sample\">\n                        <code>\n                            {`<Collapse>\n                                <div className=\"content\">content content content...</div>\n                            </Collapse>`}\n                        </code>\n                    </div>\n                </div>\n                <div className=\"right\">\n                    <button className=\"button\" onClick={ this.showContent }>show content</button>\n                    <Collapse open={ this.state.open }>\n                        <div className=\"content\">\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n                        </div>\n                    </Collapse>\n                </div>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLoader: (payload) => dispatch(Actions.setLoader(payload))\n    }\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Tool);\n","import React         from 'react';\nimport { Component } from 'react';\nimport { connect }   from 'react-redux';\nimport { Switch }    from 'react-router-dom';\nimport { Route }     from 'react-router-dom';\nimport { NavLink }   from 'react-router-dom';\nimport { Redirect }  from 'react-router-dom';\n\n//Import documentation\nimport Scroll from './scrolltop';\nimport Meta   from './meta';\nimport Loader from './loader';\nimport Popups from './popups';\nimport Collapse from './collapse';\n\n//css\nimport './index.scss';\n\n\n//routing constants\nimport * as Routes from 'dev/docs/doc-routes';\n\n\nclass Components extends Component {\n    render() {\n\n        return (\n            <div className=\"components-wrapper\">\n                <div className=\"menu-wrapper\">\n                    <NavLink to = { Routes.scroll } exact activeClassName='active' className=\"docs-item\">ScrollToTop</NavLink>\n                    <NavLink to = { Routes.meta }   exact activeClassName='active' className=\"docs-item\">MetaTags</NavLink>\n                    <NavLink to = { Routes.loader } exact activeClassName='active' className=\"docs-item\">Loader</NavLink>\n                    <NavLink to = { Routes.popups } exact activeClassName='active' className=\"docs-item\">Popups</NavLink>\n                    <NavLink to = { Routes.collapse } exact activeClassName='active' className=\"docs-item\">Collapse</NavLink>\n                </div>\n                <Switch>\n                    <Route exact path= { Routes.components }>\n                        <Redirect to={ Routes.scroll } />\n                    </Route>\n                    <Route exact path={ Routes.scroll } component={ Scroll }/>\n                    <Route exact path={ Routes.meta } component={ Meta }/>\n                    <Route exact path={ Routes.loader } component={ Loader }/>\n                    <Route exact path={ Routes.popups } component={ Popups }/>\n                    <Route exact path={ Routes.collapse } component={ Collapse }/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\n//get required state from redux store and map them to the components props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n    }\n}\nexport default connect(mapStateToProps, null, null, { pure: false })(Components);\n","import React         from 'react';\nimport { Component } from 'react';\nimport { connect }   from 'react-redux';\nimport { Switch }    from 'react-router-dom';\nimport { Route }     from 'react-router-dom';\nimport { NavLink }   from 'react-router-dom';\n\n//Import documentation\nimport Tools      from './tools';\nimport Components from './components';\n\n//css\nimport './index.scss';\n\n//routing constants\nimport * as Routes from './doc-routes';\n\n\nclass Documentation extends Component {\n    render() {\n        \n        return (\n            <div className=\"documentation-wrapper\">\n                <div className=\"menu-wrapper\">\n                    <NavLink to = { Routes.tools } activeClassName='active' className=\"docs-category-item\">Tools</NavLink>\n                    <NavLink to = { Routes.components } activeClassName='active' className=\"docs-category-item\">Components</NavLink>\n                </div>\n                <Switch>\n                    <Route path={ Routes.tools } component={ Tools }/>\n                    <Route path={ Routes.components } component={ Components }/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\n//get required state from redux store and map them to the components props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n    }\n}\nexport default connect(mapStateToProps, null, null, { pure: false })(Documentation);\n","import React, {Component} from 'react';\nimport { connect }        from 'react-redux';\n\nimport './index.scss';\n\nclass Home extends Component {\n    \n    render() {\n        const Text = this.props.Gd.translationsArr ? this.props.Gd.translationsArr : 'text' ;\n        return (\n            <div className=\"home\">\n                <h1>{ Text.home_header }</h1>\n            </div>\n        );\n    }\n}\n\n//add GD categories and deviceState to props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n        Gd:store.gd\n    }\n}\n//map a doLgin function to props\nconst mapDispatchToProps = dispatch => {\n    return {}\n}\n\n//connect to redux store - maps dispatch and redux state to props\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(Home);\n","import React, {Component} from 'react';\nimport {connect}          from 'react-redux';\nimport {Switch, Route}    from 'react-router-dom';\nimport Api                from 'api/requests';\n\n//import components\nimport Header      from 'containers/header';\nimport MetaTags    from 'components/meta_tags';\nimport Loader      from 'components/common/loader';\nimport ScrollToTop from 'components/routing/scroll_top';\n\n//Import containers\nimport Home    from 'containers/home';\nimport Contact from 'containers/contact';\nimport Content from 'containers/content-page';\nimport Popups  from 'popups';\nimport Page404 from 'containers/page404';\n\n//remove in production\nimport Docs from 'dev/docs';\nimport AllComponents from 'dev/all-components';\n\n//css\nimport 'styles/app.scss';\nimport 'styles/fonts.scss';\n\n//routing constants\nimport * as Routes from 'constants/routes';\n\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            initialRequestsDone: false\n        }\n    }\n\n    componentDidMount() {\n        //initial requests\n        Api.getHostUrl({config:{method:'get'}}).then((response)=>{\n            if(response?.status){\n                Api.generalDeclaration().then(()=>{\n                    this.setState({initialRequestsDone:true});\n                });\n            }\n        });\n    }\n\n    render() {\n\n        let showPopup  = this.props.popupsArray.length > 0;\n        let showLoader = this.props.showLoader;\n        let renderPage = this.props.deviceState && this.state.initialRequestsDone;\n\n        //template object for dynamic page routes (content pages)\n        const data = [\n            {path: '/content1', component: Content},\n            {path: '/content2', component: Content},\n            {path: '/content3', component: Content}\n        ];\n\n        return (\n            <div className=\"App\">\n                {renderPage &&\n                <>\n                    <Header />\n\n                    {/* main routing table */}\n                    <Switch>\n                        {/* REMOVE DOCUMENTATION IN PRODUCTION BUILDS */}\n                        <Route path={ Routes.docs } component={ Docs }/>\n\n                        {/* regular routes */}\n                        <Route exact path={ Routes.root } component={ Home }/>\n                        <Route exact path={ Routes.contact } component={ Contact }/>\n\n                        {/* template for dynamic pages */}\n                        {data.map(page =>\n                            <Route key={ page.path } exact path={ page.path } component={ page.component }/>\n                        )}\n\n                        {/* defaults to 404 if none are found */}\n                        <Route component={ Page404 }/>\n                    </Switch>\n\n                    {/* make sure new page scroll position is at the top */}\n                    <ScrollToTop />\n\n                    {/* render meta tags from the server */}\n                    <MetaTags />\n                </>\n                }\n                {/* main modal component */}\n                { showPopup && <Popups />}\n\n                {/* full page loader */}\n                { showLoader && <Loader />}\n            </div>\n        )\n    }\n}\n\n//get required state from redux store and map them to the components props\nconst mapStateToProps = store => {\n    return {\n        deviceState: store.deviceState,\n        initialRequestsDone: store.initialRequestsDone,\n        showLoader: store.showLoader,\n        popupsArray: store.popupsArray,\n    }\n}\nexport default connect(mapStateToProps, null, null, {pure: false})(App);\n","import React             from 'react'; //React imports\nimport ReactDOM          from 'react-dom'; //React imports\nimport { Provider }      from 'react-redux'; //Redux HOC\nimport store             from \"./redux/index\"; //Redux Store\nimport { BrowserRouter } from 'react-router-dom'; //Router\nimport App               from './App'; //Root component\nimport deviceState       from './app/device_state/index'; //responsive view states\nnew deviceState(store.dispatch); //pass redux dispatch to device state\n\nReactDOM.render(\n    <BrowserRouter basename={'/react'}>\n        <Provider store = {store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);","import { setDeviceState } from '../../redux/actions';\n\nexport default class deviceState {\n\n    constructor(dispatch) {\n        this.dispatch            = dispatch;                      //redux action dispatch function\n        this.indicator           = document.createElement('div'); //div element to use for measurement\n        this.indicator.className = 'state-indicator';             //div class\n        this.debounce_delay      = 250;                           //debounce delay in milliseconds\n        document.body.appendChild(this.indicator);\n        this.start();\n    };\n\n    //returns the current device state according to the width of the screen as measured by\n    //the state-indicator div.\n    getScreen = () => {\n        var index = parseInt(window.getComputedStyle(this.indicator).getPropertyValue('z-index'), 10);\n        var states = {\n            1: 'desktop-large',\n            2: 'desktop',\n            3: 'tablet',\n            4: 'mobile'\n        };\n        return states[index] || 'desktop';\n    };\n\n    start = () => {\n        //Listen for screen resize with a debounce\n        var response = this.debounce(() => {\n\n            //determine current device\n            let device = this.getScreen();\n\n            //set device type in the redux store\n            let payload = {\n                device: device,\n                isMobile: device === 'mobile' ? true : false,\n                isTablet: device === 'tablet' ? true : false,\n                isDesktop: (device === 'desktop' || device === 'desktop-large') ? true : false,\n                notDesktop: (device !== 'desktop' && device !== 'desktop-large') ? true : false,\n                notMobile: device !== 'mobile' ? true : false,\n            }\n            this.dispatch(setDeviceState(payload));\n\n        }, this.debounce_delay, false);\n\n        window.addEventListener('resize', response);\n        response();\n    }\n\n    //Debounce the device state function so that it is called only once every 250ms\n    debounce(func, wait, immediate) {\n        let timeout;\n        return function () {\n            let context = this, args = arguments;\n            let later = function () {\n                timeout = null;\n                if (!immediate)\n                    func.apply(context, args);\n            };\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow)\n                func.apply(context, args);\n        };\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/burger.70be8f86.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.84287d09.svg\";"],"sourceRoot":""}